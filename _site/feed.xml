<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-UK"><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en-UK" /><updated>2025-02-11T21:27:19+00:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Luke Briscoe</title><subtitle></subtitle><author><name>Luke Briscoe</name></author><entry><title type="html">📈 Convex payoffs</title><link href="http://localhost:4000/convex-payoffs/" rel="alternate" type="text/html" title="📈 Convex payoffs" /><published>2025-02-11T21:00:00+00:00</published><updated>2025-02-11T21:00:00+00:00</updated><id>http://localhost:4000/convex-payoffs</id><content type="html" xml:base="http://localhost:4000/convex-payoffs/"><![CDATA[<p>Four years ago today (the timing of this post wasn’t intentional!), I’m sat at home doomscrolling on Twitter. The UK is in lockdown; my timeline is dominated with bad news. But then, I stumble across this post:</p>

<p align="center"> 
  <img width="400" height="300" src="https://github.com/lukebriscoe/lukebriscoe.github.io/blob/main/assets/img/Screenshot%202025-02-11%20at%2021.16.13.jpeg?raw=true" />
</p>

<p><em>Convex payoffs: investing in actions that provide compounding, long-term benefits.</em></p>

<p>Now on the surface this doesn’t scream ‘good news story’, but it triggered some formative thinking for me. It’s helped me crystallise the way I think about software engineering performance, and optimising for current and future success — both for me, and the teams of engineers and engineering leaders I support.</p>

<p>The idea is simple. Optimise for actions that are going to help you in the long-term, knowing they’ll also support your short-term success. Those actions include some of the things mentioned in the post above, such as building your reputation, maintaining a strong network and acting with integrity. I’d also add:</p>

<ul>
  <li>Fail fast, learn faster</li>
  <li>Never repeat the same mistake</li>
  <li>Take <a href="https://lukebriscoe.com/responsibility/">total responsibility</a>; avoid the ‘somebody else’s problem’ trap</li>
</ul>

<p>In the long-term, it’s the things in the convex payoffs bracket that help you stretch, grow, and perform better. It’s a false economy to optimise only for the things that you think really matter today — for example, your performance review rating, getting a bonus, or getting a pay rise. Sure, those things matter and might be incredibly important depending on your circumstances. But in the grand scheme of your career, they offer only marginal gains. If you’re interested in long-term growth and success, you need to have an eye on the convex payoffs.</p>

<p>Anyway — I’m writing this post knowing that many engineers and engineering leaders will be heading towards annual performance reviews in the next few months, and this might just be the thing that you needed to read if you’re frustrated with the outcome, or you’re delighted with it and wondering where to focus next.</p>

<p>As you reflect on your performance and career growth, ask yourself: Are you focusing on the things that will compound over time? If not, what’s one small shift you can make today?</p>]]></content><author><name>Luke Briscoe</name></author><summary type="html"><![CDATA[Four years ago today (the timing of this post wasn’t intentional!), I’m sat at home doomscrolling on Twitter. The UK is in lockdown; my timeline is dominated with bad news. But then, I stumble across this post:]]></summary></entry><entry><title type="html">🙋 I intend to…</title><link href="http://localhost:4000/i-intend-to/" rel="alternate" type="text/html" title="🙋 I intend to…" /><published>2024-04-30T20:00:00+00:00</published><updated>2024-04-30T20:00:00+00:00</updated><id>http://localhost:4000/i-intend-to</id><content type="html" xml:base="http://localhost:4000/i-intend-to/"><![CDATA[<p align="center"> 
  <img width="280" height="280" src="https://raw.githubusercontent.com/lukebriscoe/lukebriscoe.github.io/main/assets/img/DALL%C2%B7E%202024-04-.webp" />
</p>

<h2 id="-i-intend-to">🙋 ‘I intend to’</h2>
<p>“<em>I intend to…</em>”. Three little words that have had a big impact on my career.</p>

<p>I found the phrase when I first read “Turn the Ship Around” by David Marquet and it’s stuck with me ever since.</p>

<h2 id="-turn-the-ship-around">🚢 Turn the ship around</h2>
<p>In the book submarine captain David Marquet shares his approach to leadership aboard the USS Santa Fe nuclear submarine. The submarine was one of the worst performing in its fleet, and Marquet’s story is one of turning it around into being one of the best.</p>

<p>The idea at the core is that success relies on distributing control and authority to the people best placed to make the decisions, and <em>ask them what they intend to do</em> rather than giving instructions or handing down decisions. Hence the phrase “I intend to…” was born.</p>

<h2 id="-my-experience">💭 My experience</h2>
<p>My experience has been overwhelmingly positive when following this approach and using “I intend to…” to share what I plan to do about something. I’ve used it both as both an individual contributor (IC) and as an engineering leader. Yes, it felt a little unnatural to use the words at first. But once you get over the initial weirdness, it’s surprising how quickly it becomes a natural part of your language.</p>

<p>I did a quick Slack search whilst I was drafting this post and I’ve used the phrase 16 times in my written comms this year. I did the same search for a team I work closely with and they’ve used it 28 times. I’ve got to admit it was very rewarding to decide to write this post and find so many recent examples of me and my teams using it in practice 😅</p>

<p>To bring this to life, I used “I intend to” recently when deciding to change up one of our weekly business review meetings. I shared my intent to trial a new format to drive some different outcomes, sharing what and how I intended to change it. The response to that? Two of my peers signalling their support for the decision, but it also gave the group the chance to challenge and ask for more information about why.</p>

<p>In this example I couldn’t share my intent until I’d got clear on the problem I wanted to solve, and the way I wanted to solve it. For me that’s where the real value from using “I intend to” comes from - you need to have done the upfront thinking or have specific knowledge before you commit to what you intend to do.</p>

<h2 id="-so-why-is-it-so-impactful">💥 So why is it so impactful?</h2>

<p>🧑‍💻 For me as an IC: <br />
– Facilitates me deeply understanding the action I intend to take to solve a problem — I take the time upfront to build confidence in my reasons</p>

<p>– Encourages me to hold myself accountable - I’m not going to state my intent and then not follow through with something</p>

<p>– Improves my decision making - I won’t block on someone else giving me confirmation before I go ahead; I state my intent as as way of signalling what I’m going to do next (giving others the opportunity to challenge)</p>

<p>– Encourages me to communicate openly and proactively. In turn, this sets a precedent for others to follow</p>

<p>🧑‍✈️ For me as a leader: <br />
– Pushing the decision making authority to the people who are best placed to make it, improving the decision making process</p>

<p>– Improving visibility over the decisions being made in a team (particularly if you encourage async communication)</p>

<p>– Increasing team initiative and ownership — teams know I won’t by default make decisions for them, so they need to seize the initiative and state what they intend to do (in turn opening up an opportunity to challenge or understand the reasons behind the decision further)</p>

<p>– Boosting trust between people in teams - teams start sharing clearer expectations with each other that creates accountability</p>

<p>In combination all of these things compound into something really quite impactful. Over time you’ll see this way of operating catch on across teams, and enable more and more of the smart people you’ve hired to take strong ownership and licence over their work. Yes you’ll probably make some mistakes along the way - but creating a culture of accountability and biasing towards action will very likely produce more good outcomes than bad.</p>

<h2 id="-use-it-next-time-youre-faced-with-a-decision">🙌 Use it next time you’re faced with a decision</h2>
<p>So. If you’re an IC, next time you’re about to ask what the next step is or what you should pick up next, try deciding for yourself and communicate it by saying “I intend to…”. 
If you’re a leader, empower your team by encouraging them to express their intent when they’re faced with a decision. Be deliberate and create the space (and set the expectation) that you want them to state their intentions rather than leaving it for you or someone else to decide.</p>

<p>You might be surprised by the positive changes it brings about. I certainly was!
<br />
<br />
I’d love to hear from you about where this has worked in your experience, and what other approaches you’ve taken to empower great decision making in your teams! Feel free to share with me on <a href="https://www.linkedin.com/in/lbriscoe/">LinkedIn</a>!
<br />
<br />
<br /></p>

<center>Images in this post were generated using DALL-E</center>]]></content><author><name>Luke Briscoe</name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">🎥 This is my architecture at AWS re:Invent - Monzo Bank</title><link href="http://localhost:4000/monzo-architecture/" rel="alternate" type="text/html" title="🎥 This is my architecture at AWS re:Invent - Monzo Bank" /><published>2024-04-27T15:00:00+00:00</published><updated>2024-04-27T15:00:00+00:00</updated><id>http://localhost:4000/monzo-architecture</id><content type="html" xml:base="http://localhost:4000/monzo-architecture/"><![CDATA[<p>A very short post to highlight the ‘This is my architecture’ session I was invited to run at AWS Re:Invent in December 2023.</p>

<p>This was my first time behind the bright lights in the recording studio in Las Vegas, but I had a great time sharing a very high-level overview of the platform we’ve built at Monzo.</p>

<p>📽 <a href="https://www.youtube.com/watch?v=O3s3MWD-UUA">You can watch my talk here on the AWS Youtube channel</a></p>]]></content><author><name>Luke Briscoe</name></author><summary type="html"><![CDATA[A very short post to highlight the ‘This is my architecture’ session I was invited to run at AWS Re:Invent in December 2023.]]></summary></entry><entry><title type="html">💷 The Frugal Architect</title><link href="http://localhost:4000/the-frugal-architect/" rel="alternate" type="text/html" title="💷 The Frugal Architect" /><published>2023-12-19T14:00:00+00:00</published><updated>2023-12-19T14:00:00+00:00</updated><id>http://localhost:4000/the-frugal-architect</id><content type="html" xml:base="http://localhost:4000/the-frugal-architect/"><![CDATA[<p align="center"> 
  <img width="600" height="300" src="https://github.com/lukebriscoe/lukebriscoe.github.io/blob/main/assets/img/DALL%C2%B7E%202023-12-19%2013.31.05%20-%20A%20digital%20illustration%20for%20a%20blog%20article%20about%20frugal%20architecture%20in%20cloud%20computing.%20The%20scene%20is%20a%20modern,%20sleek%20office%20environment%20with%20large%20pan.png?raw=true" />
</p>

<p>I was lucky enough to head over to Vegas earlier this month for AWS re:Invent. We had a couple of speaking slots to talk about the work we’ve done at Monzo over the last year, and it was my first taste of a conference of this size. I’d say <em>surreal</em> is the word.</p>

<p>While there, I had the opportunity to go to <a href="https://www.youtube.com/watch?v=UTRBVPvzt9w">Werner Vogels’ keynote</a> (it’s worth a watch if you have the time - even just for the production value!). He spent a big chunk of it introducing <a href="https://thefrugalarchitect.com/">“The Frugal Architect”</a>.</p>

<p>This resonated with me personally as a few years back I had one of those moments of realisation that the AWS bill was getting too big. Ever since, a day hasn’t passed without me contemplating cloud cost optimisation.</p>

<p>This post is a roundup of the key themes Vogels introduced, with a sprinkling of how I think this applies to engineering teams (with an obvious bias towards Platform given my current responsibilities 😄).</p>

<p>(On a lighter note, I found it amusing yet insightful to hear the CTO of a leading cloud provider emphasise the importance of controlling spend – but better spent with them than a competitor, I guess…)</p>

<h2 id="3️⃣-three-pillars-of-frugality">3️⃣ Three pillars of frugality</h2>
<p>I like the way he grouped the key laws into three pillars of <em>Design, Measure</em>, and <em>Optimise</em>.</p>

<p>I’m intending to use these deliberately with my teams next year as I think it provides a nice condensed way of thinking about cost optimisation. I also think the law themselves do a good job of framing cloud frugality as something that every engineer needs to care about, not just the team who operate the platform. Let’s briefly dig in to each of these pillars.</p>

<h3 id="-design">🎨 Design</h3>

<ul>
  <li><em>Cost is a non-functional requirement</em></li>
  <li><em>Systems that last align cost to business</em></li>
  <li><em>Architecting is a series of trade-offs</em></li>
</ul>

<p>But how do you do this? For me this means treating cost as a first class citizen regardless of what area of the business you’re working in. My experience running platform teams that abstract away complexity for engineers (so they can focus on building great products for customers and not solving infra-related problems) is that we can often abstract away the cost from them too. If you operate a central platform, there’s a risk cost becomes <em>your</em> problem to solve rather than something that’s considered upfront by the teams building.</p>

<p>Aligning cost to business makes sense to me - do you understand the true cost of offering your product/feature?  Establishing how much you’re willing to spend on operating a product or feature is a key first step - and you can make the right trade offs from then on.</p>

<p><em>A genuine question that I’d love to hear from you about – how do you integrate cost considerations into your design processes?</em></p>

<h3 id="-measure">📊 Measure</h3>

<ul>
  <li><em>Unobserved systems lead to unknown costs</em></li>
  <li><em>Cost aware architectures implement cost controls</em></li>
</ul>

<p>I think this pillar is obvious (especially if you’ve had to solve any kind of cost problem in the past). If you don’t know what you’re spending, you can’t track it. And if you can’t track it, how will you know what to optimise?</p>

<p>If you’re watching Vogels’ talk back, I really liked the example used about the identical houses in Amsterdam who had wildly varying energy consumption. Turns out that the houses who had their energy meters visible in the hallway for residents consumed significantly less energy than the ones who had theirs in the basement…</p>

<h3 id="-optimise">📉 Optimise</h3>

<ul>
  <li><em>Cost optimisation is incremental</em></li>
  <li><em>Unchallenged success leads to assumptions</em></li>
</ul>

<p>‘Cost optimisation is incremental’ is probably my favourite law of them all. Reaffirming that cost optimisation is never ‘done’ is an important message for teams internally. Set up your observability, put sensible thresholds and alerts in place, and keep deliberately chipping away at it - just as you would your technical debt. Sounds super obvious, right…but are you doing it?!</p>

<h2 id="-frugal-architecture-in-practice">🤾 Frugal architecture in practice</h2>
<p>Embracing the role of a frugal architect isn’t just about cutting costs. It’s more than that - it’s about every engineer taking responsibility for making sustainable, well considered decisions about how and when to build.</p>

<p>Broadly I felt validated that I’m approaching the problem of cost control and optimisation in the ‘right’ way so far. It provides a useful framework that we can apply in our environments to make the point that spending money sensibly is the responsibility of <em>all</em> engineers.</p>

<p>I’d love to hear from you about the various tools and approaches you’ve found effective — feel free to get in touch!</p>

<center>All images in this post were generated using DALL-E</center>]]></content><author><name>Luke Briscoe</name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">🦸 On-call as your superpower</title><link href="http://localhost:4000/on-call-as-a-superpower/" rel="alternate" type="text/html" title="🦸 On-call as your superpower" /><published>2023-04-27T21:00:00+00:00</published><updated>2023-04-27T21:00:00+00:00</updated><id>http://localhost:4000/on-call%20as%20a%20superpower</id><content type="html" xml:base="http://localhost:4000/on-call-as-a-superpower/"><![CDATA[<p><em>In March 2023 I gave a talk about scaling on-call at the Bristol Tekcurious meetup, and this post outlines the talk’s content. I had a great time sharing some of my lessons from over the years and also getting to know so many people afterwards - thanks again to everyone who came along!</em></p>

<h2 id="-on-call-in-context">📟 On-call in context</h2>

<p>First up, when I’m talking about on-call, I’m talking about having a software engineer (or multiple) available 24x7 to respond to important alerts. Those alerts could suggest something has gone wrong, or something needs human intervention <em>before</em> it goes wrong - but regardless, it needs a rapid response.</p>

<h2 id="️-monzos-on-call-journey">♻️ Monzo’s on-call journey</h2>

<p>I spent most of the time in the talk sharing what I’ve learnt from scaling on-call at Monzo over the last few years. We’ve blogged about this on a few occasions on the Monzo blog (see <a href="https://monzo.com/blog/2018/09/20/on-call">this post</a>, <a href="https://monzo.com/blog/how-weve-evolved-on-call-at-monzo">this post</a> and <a href="https://monzo.com/blog/2022-02-24/scaling-our-on-call-process">this post</a> for the originals!). Much of my talk was about bringing the key messages from those three blogs to life, and sharing some of the lessons I’ve learnt personally along the way.</p>

<p>We start things off with the early days at Monzo - ‘the rocketship’ phase.</p>

<h2 id="-the-rocketship">🚀 The Rocketship</h2>

<p>The early days of on-call used a super simple model. We defined our critical alerts that needed an immediate response, hooked them into PagerDuty to notify someone about it, and then had a group of engineers carry the pager so we could respond. We started out with a single rota with a small group of engineers on-call, and over time as we scaled we grew the number of engineers on-call in total.</p>

<p>A single engineer would be on-call for a week at a time, and they’d be on-call for everything engineering-related at the company. These engineers formed what we called our ‘primary’ on-call rota, and they were the first point of contact for any alerts. Their job was to either fix the problem, or find someone who could.</p>

<p>The high-level workflow looked something like this:</p>

<p align="center"> 

<img width="500" height="230" src="https://github.com/lukebriscoe/lukebriscoe.github.io/blob/main/assets/img/model1.png?raw=true" />

</p>

<p>This served us well for a couple of years - as more engineers joined, we grew the size of our primary rota and cycled more engineers in. Then we added our shadow on-call schedule into the mix too.</p>

<p>The shadow rota meant that we’d have two people on-call at once for all of our systems. The primary on-caller would take the lead on a page, and the shadow on-caller would observe and support. Their main focus was to get comfortable with being on-call, learn how our systems work, and improve our documentation.</p>

<p>It also provided a nice on-ramp to the primary on-call schedule, and opened up some good mentoring opportunities for engineers. When I joined the company in early 2019, this was still the model we were using.  It shows how well a simple on-call model can scale. Maybe something this simple is all you’ll ever need at your company!</p>

<h3 id="-pros-and-cons">💭 Pros and cons</h3>

<p>🟢 We’d get a human onto a problem very quickly<br /></p>

<p>🟢 On-callers got broad exposure to our platform, and by extension, it provided good learning opportunities for them<br /></p>

<p>🟢 It created strong incentives for engineers to document their code well, write high quality runbooks, and build resilience into their designs. Engineers knew that someone else might be responding to a problem with their services, so built with that in mind<br /></p>

<p>🟠 As we scaled we found it more difficult to onboard new engineers to the rota. As we started to grow as an org and split into different teams, on-callers had to know a lot about our technology<br /></p>

<p>🟠 On-call was a centrally owned process and set up to work in one way. Teams couldn’t easily optimise for their own services<br /></p>

<p>🟠 Our resolution times could have been even faster. Our response times were super fast, but sometimes an engineer would be paged and they’d have to spend time building context of the system that was broken<br /></p>

<p>Considering all of this, it was time to evolve things further..
<br /></p>

<h2 id="️-the-scale-up">⬆️ The Scale Up</h2>

<p>The next significant evolution of on-call came around about the time we’d hit our first 1 million customers. We introduced a new layer of ‘specialists’ who sat under our existing primary/shadow on-call rota. It looked a little something like this:</p>

<p align="center"> 

<img width="650" height="250" src="https://github.com/lukebriscoe/lukebriscoe.github.io/blob/main/assets/img/model2.png?raw=true" />

</p>

<p>By now we’d scaled the engineering org to have more dedicated specialist teams. Those teams were working on things like our platform and in specialist payments teams. We found that often it was expertise in these areas that we needed during incidents, and now that we had specialist teams available, it made sense to page them in when they were needed.</p>

<p>We’d staff the specialist rotas with 4-6 engineers from some of these teams, and they were available as a formal escalation path for the primary/shadow on-callers. The process largely worked the same way as before, but the primary/shadow pair of on-call engineers now had quick access to specialist knowledge when they needed it.</p>

<h3 id="-pros-and-cons-1">💭 Pros and cons</h3>

<p>🟢 We had quicker access to teams with the right context and knowledge to be able to get them involved <br /></p>

<p>🟢 Our response times remained super fast, and our resolution times sped up too<br /></p>

<p>🟠 We were growing rapidly and hiring lots of new engineers. At times our specialist teams were still building knowledge themselves<br /></p>

<p>🟠 Where problems clearly needed a specialist, the role of the primary on-caller basically became 1st line triage<br /></p>

<p>🟠 And as a result, there was still some friction in the process to get the right responders<br /></p>

<p>So here comes the next evolution..!
<br /></p>

<h2 id="-the-mature-org">🧓 The Mature Org</h2>

<p>This was the point where we were a much larger company, serving maybe ~3 million customers, and many of our teams and processes were more mature. We decided to push the alerts closer to what we call ‘collectives’ (aka departments) across Monzo.</p>

<p>We reorganised our on-call schedules to be domain specific. We’d pool together 6-8 engineers from across many teams within a collective, and they’d act as the primary on-callers for critical alerts in their area of expertise. It looked something like this:</p>

<p align="center"> 

<img width="600" height="300" src="https://github.com/lukebriscoe/lukebriscoe.github.io/blob/main/assets/img/model3.png?raw=true" />

</p>

<p>An interesting problem to solve here was one of ‘how do we route the right alerts to the right teams now we have multiple?!’. We solved this by defining codeowners for each of our microservices and platform components in code, and then mapping that owner to a corresponding PagerDuty schedule.</p>

<p>For example, If a critical alert fired relating to our Faster Payments processor, it’d be routed to the schedule staffed by Payments engineers as that collective was defined as the service codeowner.</p>

<p>This model worked very well for us for another 18-24 months:</p>

<h3 id="-pros-and-cons-2">💭 Pros and cons</h3>

<p>🟢 The main benefit was that we were skipping the 1st line / primary on-caller step, and going direct to the teams who had engineers working on problems specific to their domain <br /></p>

<p>🟢 We’d greatly increased our chances that the page would land with someone who knows something about that system. Increasingly we wouldn’t need to page another team for support - leading to faster resolution times <br /></p>

<p>🟠 But, it still wasn’t perfect and we felt we could do even better - so we evolved things again…
<br /></p>

<h2 id="-today">🤙 Today</h2>

<p>And so here we are with how things are set up today serving our ~7 million customers. We introduced this way of managing on-call around the ~4.5m customer mark.</p>

<p>This process works incredibly well for us right now, and we know it will scale as we grow as a business. We’ve now completely decentralised on-call - so pages/alerts are routed directly to the individual team that owns them. We respond rapidly, and have the right engineers immediately available to solve any problems - which has seen our resolution times improve again. It looks like this:</p>

<p align="center"> 

<img width="600" height="300" src="https://github.com/lukebriscoe/lukebriscoe.github.io/blob/main/assets/img/model4.png?raw=true" />

</p>

<p>And this is pretty obvious, right? <em>Of course we’d just route the alert directly to the team that can fix it?</em></p>

<p>We were able to do this mainly because our engineering teams were all well established and well staffed by this time to manage their <em>own</em> healthy on-call rotation.</p>

<p>One of the key benefits with this devolved model of on-call is that teams have been able to optimise their processes to best suit the level of service they need to offer. Engineering Managers in each team are responsible for organising their on-call schedules. It’s also down to the teams to set things up appropriately tailored to the systems that they own, and to iterate on and optimise it as necessary.</p>

<p>In previous models on-call was managed centrally by me and a few others, and we were trying to apply a one-size-fits-all approach across all teams. THat worked well for a while, but the model we’re iterated towards today means we can optimise to operate our services in the very best way possible. The best outcome for our teams and our customers!
<br /></p>

<h2 id="-on-call-as-your-superpower">🦸 ‘On-call as your superpower…’</h2>

<p>Once I’d covered the history of on-call, I wrapped things up in the talk by sharing three key bits of advice from my personal experience. I shared that when done well, on-call has the potential to become a superpower <em>and</em> an enabler for your business.<br />
<br /></p>

<h3 id="-1-put-humans-at-the-centre-of-your-on-call-process">👪 1. Put humans at the centre of your on-call process</h3>

<p>Design your processes around treating humans well. We’re not machines! As some practical advice, you can consider:</p>

<ul>
  <li>
    <p>Giving teams time in hours to investigate deviant system behaviour that they have been paged for</p>
  </li>
  <li>
    <p>Giving them time off in lieu if they’ve been paged overnight - and encourage this to be the norm</p>
  </li>
  <li>
    <p>Paying engineers for being on-call!</p>
  </li>
  <li>
    <p>Empowering teams to to set on-call up in the most optimal way to serve their customers/users</p>
  </li>
  <li>
    <p>Encouraging managers to join on-call and get involved by (at least) supporting on-callers as an escalation point. Get them leading by example!</p>
  </li>
</ul>

<p>By doing this I’ve actually seen waiting lists in some teams for engineers to go on-call, which is unheard of! <br />
<br /></p>

<h3 id="-2-dont-accept-deviant-system-behaviour">👺 2. Don’t accept deviant system behaviour</h3>

<p>This is one of <a href="https://monzo.com/blog/2018/06/29/engineering-principles">Monzo’s engineering principles</a> and it’s served us incredibly well over the years.</p>

<p>If someone is paged, don’t brush it off and think it’s ok. Run an analysis of what happened and stop it from re-occurring. Or if you can’t stop it, define how you can fix it faster next time or respond better.</p>

<p>If you’re a leader, give your teams time in-hours to do this, and be especially hard on false alarms. Don’t risk your teams becoming desensitised to alerts that are paging them. <br />
<br /></p>

<h3 id="️-3-set-up-an-effective-way-to-iterate-on-your-on-call-process">♻️ 3. Set up an effective way to iterate on your on-call process</h3>

<p>Make sure you’re sharing your on-call lessons across all teams. We have an internal Slack channel where on-callers can share lessons and ask each other for help which has been great for us to help level each other up. We’ve also ran regular on-call retros to help learning and sharing. We were very good at this in the early days, especially when we were a centralised group of on-callers, and it’s helped get us to where we are today. In a nutshell, listen to what your on-callers are saying you can do to improve, and act on it!</p>

<p>We also run a regular session at Monzo called ’Learning from Incidents’. This is a forum where engineers present an overview of an incident they’ve handled recently to a forum that’s open to anyone in the company to join. They nearly always start their stories with being paged for something, and it’s a great way to learn from the experiences of other teams.</p>

<h2 id="-the-end">👋 The End</h2>
<p>And that was that for the talk. I’m incredibly proud of how we’ve scaled things and where we’re at today - but I expect we’ll keep evolving as the needs of our customers and scale of our business change over time.</p>

<p>Here’s hoping that some of my lessons and advice can help you improve on-call wherever you work! 🤞 📟</p>

<p><br /></p>

<p align="center"> 
<img width="500" height="300" src="https://github.com/lukebriscoe/lukebriscoe.github.io/blob/main/assets/img/IMG_5164.JPG?raw=true" />
</p>]]></content><author><name>Luke Briscoe</name></author><summary type="html"><![CDATA[In March 2023 I gave a talk about scaling on-call at the Bristol Tekcurious meetup, and this post outlines the talk’s content. I had a great time sharing some of my lessons from over the years and also getting to know so many people afterwards - thanks again to everyone who came along!]]></summary></entry><entry><title type="html">🫡 Total responsibility</title><link href="http://localhost:4000/responsibility/" rel="alternate" type="text/html" title="🫡 Total responsibility" /><published>2023-01-11T22:22:00+00:00</published><updated>2023-01-11T22:22:00+00:00</updated><id>http://localhost:4000/responsibility</id><content type="html" xml:base="http://localhost:4000/responsibility/"><![CDATA[<p align="center"> 
  <img width="300" height="200" src="https://github.com/lukebriscoe/lukebriscoe.github.io/blob/main/assets/img/undraw_Container_ship_re_alm4.png?raw=true" />
</p>

<h2 id="-somebody-elses-problem">🙈 Somebody Else’s Problem</h2>

<p>Recently my boss shared something with our Engineering Manager community dubbed ‘Somebody Else’s Problem’, or ‘SEP’. It’s a term coined by Douglas Adams in his 1982 novel ‘Life, the Universe and Everything’:</p>

<blockquote>
  <p>An SEP is something we can’t see, or don’t see, or our brain doesn’t let us see, because we think that it’s somebody else’s problem. That’s what SEP means. Somebody Else’s Problem. The brain just edits it out, it’s like a blind spot.</p>
</blockquote>

<p>(I haven’t read the book, but <a href="https://en.wikipedia.org/wiki/Somebody_else%27s_problem">Wikipedia does a good job of explaining SEP in some more detail</a>).</p>

<p>Anyway, it’s been on my mind ever since. I’ve been reflecting on the problems I’m ignoring across my teams because I’m blind to them, or I’ve subconsciously badged them as somebody else’s. That period of reflection led me to writing this post to share the concept more widely.  Hopefully it prompts some thinking for you too!</p>

<h2 id="️-success-is-our-responsibility">🙋‍♂️ Success is our responsibility</h2>

<p>The concept of SEP dovetails nicely into the idea of responsibility. As leaders, we are ultimately responsible for the success of our teams and the problems they encounter. Whether the problems are clearly ours to solve, or they impact us but belong to someone else, it’s our responsibility to address them. Seeking out those problems that fall in the SEP category is particularly important. I bet they’re the ones that are slowing you down or blocking your progress. I have blind spots, no doubt - but that’s where the wider team come in. If <em>everyone</em> takes complete responsibility for the problems infront of us, our chances of success get a big boost.</p>

<p>As companies grow and teams expand, it’s easy to slip into thinking that someone else will take care of a problem. But, this mindset can lead to a lack of responsibility and a negative culture. In my experience, as we hire more people and and ownership lines are drawn between roles and teams, it becomes more tempting to point fingers and ask, “why should I solve the problem if the person or team who should be solving it isn’t?”. This is where our SEP blind spots start creeping in, and on reflection, there are definitely problems that I can lean into more in my organisation.</p>

<h2 id="-total-responsibility">💯 Total responsibility</h2>

<p>Over Christmas I was listening to <a href="https://www.thehighperformancepodcast.com/podcast/frank-lampard">a podcast with Frank Lampard</a>, a former professional footballer turned Premier League manager. He spoke about the importance of taking total responsibility for performance, both good and bad. He mentioned about how easy it is in football for players to think that team performance isn’t theirs to solve - blaming the defence, the strikers, or the tactics. He said something like:</p>

<blockquote>
  <p>‘If you want to get better, you have to take responsibility - for good or for bad, I suppose…’</p>
</blockquote>

<p>His point resonated with me as I realised it doesn’t really matter about the situation - a scrappy startup, a large enterprise, or even a football team. If there’s a problem impacting us, it’s our responsibility to solve it - regardless of whether we think it’s somebody else’s problem to solve or not.</p>

<p>I know that things are more complicated in practice than this (and I could go on exploring the anti-patterns taking responsibility for everything might introduce…), but I really like this concept of total responsbility and how SEP impacts it. I’ll use this post to hold myself accountable to take total responsibility for the problems impacting me and my teams in future. In particular, I’ll be keeping myself honest about what problems I’m ignoring.</p>

<p>To Frank Lampard’s point, whether we like it or not - it’s our job to take responsibility if we want to get better.</p>

<p align="center"> 
  <img width="450" height="300" src="https://github.com/lukebriscoe/lukebriscoe.github.io/blob/main/assets/img/undraw_Powerful_re_frhr.png?raw=true" />
</p>

<p><br /> Give me a shout if you’d like to talk about any of this or share your experiences too - I’m on a constant journey of learning and would love to hear from you 👨‍🏫</p>

<center>All images in this post are from https://undraw.co/</center>]]></content><author><name>Luke Briscoe</name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">🥊 The priority battle</title><link href="http://localhost:4000/the-priorities-battle/" rel="alternate" type="text/html" title="🥊 The priority battle" /><published>2022-08-05T14:00:00+00:00</published><updated>2022-08-05T14:00:00+00:00</updated><id>http://localhost:4000/the-priorities-battle</id><content type="html" xml:base="http://localhost:4000/the-priorities-battle/"><![CDATA[<p>I’m finally writing again! I was surprised to see my last post was back in June last year, and after two weeks off from work, I feel like I’ve got the headspace to write again. Prioritisation has been heavy on my mind over the last ~3-4 months as the scope of my role has changed, so this feels like a decent topic to get stuck into.</p>

<p align="center"> 
  <img width="200" height="150" src="https://github.com/lukebriscoe/lukebriscoe.github.io/blob/main/assets/img/undraw_Prioritise_re_r5xu.png?raw=true" />
</p>

<h2 id="-set-clear-priorities">🔢 ‘Set clear priorities…’</h2>

<p>The most common bit of advice and feedback I’ve had through my leadership career is ‘you need to set clear priorities’. We all know that having clear priorities is important, but it’s easier said than done. As I’ve grown into more senior roles and taken on more responsibility, setting and sticking to my priorities has become <em>even more</em> important, but I’ve also learnt from the lessons (and pain) of not doing this well.</p>

<p>Setting clear priorities is important for me to do a good job, important for me to handle pressure well, but also incredibly important to avoid taking too much on and burning out.</p>

<p>Over the last few months, the scope of my role has increased a lot, and as such, I’ve had to make some tough priority calls and change the way I’m operating to allow me to lead effectively. Crucially, I’ve had to be very clear on what I <em>won’t</em> be doing. <br /></p>

<p>Here’s what my org looks like at the moment so you get an idea about why this has been so important - I’m realistic enough to know that I can’t operate as a manager for three teams, a manager of managers, and set direction for my org without effectively prioritising:</p>

<p align="center"> 
  <img width="700" height="300" src="https://github.com/lukebriscoe/lukebriscoe.github.io/blob/main/assets/img/Lukes%20org%20monzo.png?raw=true" />
</p>

<h2 id="️-getting-clear">😶‍🌫️ Getting clear</h2>
<p>Clearly, one of my top priorities needs to be to hire some managers in to some of those teams. I need to get the right team in place to free me up to operate at my best, so hiring is my top priority (nudge nudge - check out <a href="https://monzo.com/careers/">monzo.com/careers</a> 😉).
<br />
Part of the motivation behind me writing this post is to have something to hold myself accountable to. I’m not saying I’m great at all of these things, but they’re helping me get focused and see the light at the end of the tunnel. Hopefully they might help you too 🚇</p>

<h2 id="-my-rules-for-prioritising">📏 My rules for prioritising</h2>

<h3 id="1️⃣-stick-to-the-process">1️⃣ Stick to the process</h3>
<p>I’ve written previously about <a href="https://lukebriscoe.com/2019/09/16/managing-time.html">how I manage my time</a> - rule number one is to stick to my process for this. I know this way of working works for me and I’ve had success with it in the past - so stick to it!</p>

<h3 id="2️⃣-bounce-my-priorities-around-with-my-manager">2️⃣ Bounce my priorities around with my manager</h3>
<p>This has been very useful for me as they’ve been able to nudge me in the right direction where I’ve needed it. It’s also been good as they’ve been able to give me cover for some of the things I’ve had to drop or put on hold for a while. It’s been great for me to do this as I’ve had to be clear on what my priorities are ahead of our 1:1s — acting as a good forcing function for getting laser focused. Would definitely recommend you do this with your manager! 💯</p>

<h3 id="3️⃣-share-my-priorities-regularly">3️⃣ Share my priorities regularly</h3>
<p>I aim to be explicit with my teams about what my top priorities are at least monthly. That way they know where my time is being spent, and what I won’t be able to support on. They also know when and how to ask for my support - I’ve tried to set up some clear triggers for where I should be pulled in to decisions or challenges, and how I expect information to be pushed to me (for example, incidents my teams are handling, however minor - I don’t need all of the detail nor do I need to be across everything, but I do appreciate a quick briefing on anything interesting going on).</p>

<h3 id="4️⃣-shed-some-light-on-what-ive-been-doing">4️⃣ Shed some light on what I’ve been doing</h3>
<p>At the start of this year I created an internally-public Slack channel where every week (ish…) I share a digest of what I’ve been doing, where I’ve spent my energy, and some of the key lessons I’ve learnt. Anyone can drop in there to see what I’ve been upto. As I read back each week, it’s interesting to see if I’ve been focusing on the right things, and as the feedback loops are quite short, it’s given me the opportunity to course correct quickly.</p>

<h3 id="5️⃣-say-no">5️⃣ Say no</h3>
<p>I’m still learning about this. I like being helpful, and I don’t like saying no to things — but to ensure I’m doing a good job and looking after myself, I’ve had to get used to it. There’s probably a whole other post I can write about how I’ve tried to say no to things and ended up doing them anyway - but the rule is to say no where I can (or say no to something else in my top priorities so I can say yes).</p>

<h3 id="6️⃣-delegate">6️⃣ Delegate</h3>
<p>Where I can’t say no, my general rule is to either a) do it (and reprioritise and communicate those changes as a result), or b) delegate. In the last few months I’ve realised more than ever how powerful (and <em>empowering</em>) delegating can be, and it’s helped me create new opportunities for engineers and managers in my team that I wouldn’t have been able to find otherwise. I set clear outcomes to be delivered whenever I delegate, and then pop that onto my ‘Delegated - check in’ section in my priorities doc. I’ve enjoyed practicing this more recently.</p>

<p align="center"> 
  <img width="200" height="150" src="https://github.com/lukebriscoe/lukebriscoe.github.io/blob/main/assets/img/undraw_tasks_re_v2v4.png?raw=true" />
</p>

<h2 id="-challenges">😥 Challenges</h2>
<p>My rules generally serve me well, but there are plenty of problems that I bump in to:</p>

<h3 id="️guilt">👨‍⚖️Guilt</h3>
<p>I constantly feel guilty about all the things I’m not doing. At the moment whilst I’m managing lots of people, I generally have weekly 1:1s with my managers and tech leads, then fortnightly 1:1s with my engineers. I squeeze my skip-level 1:1s in when I can. By not being able to spend more time with everyone in my org, I feel guilty - what if I’ve missed something? What if someone needs me but is holding back because of how ‘busy’ I am? What if I’ve missed a problem in one of the squads that I could help resolve before it turns into something more serious?<br />
I don’t quite know yet how to properly manage this - other than telling myself it’s ok. Advice appreciated here if you’re reading this and have conquered your guilt!</p>

<h3 id="-saying-no">😐 Saying no</h3>
<p>I don’t like saying no. Sometimes I feel like I’ve missed opportunities because I’ve had to prioritise something else - for example, I said no to a good speaking opportunity recently because there’s just no space in my schedule (or my brain) for me to have taken it and done it justice. I know that’s the right thing to do, but it’s still a challenge…</p>

<h3 id="-balancing-work-and-life">🧠 Balancing work and life</h3>
<p>I’ve fell into bad habits at times that have meant that I’ve worked evenings + long days just to keep on top of everything (performance review periods are classic for this). In the short-term, it’s great as I feel like I’m getting through my to-do list, but in the medium-long term, I’m left exhausted. Crucially I’ve allowed myself to miss out on things like helping get my children to bed, or turning down going out for a beer with friends, because I’m using that time to churn through my to-do list. My holiday recently was much needed, and part of that was because I was working long days in the run up. I’m not expected to work these hours by my employer btw - it was a symptom of me not sticking well enough to my priorities, and saying ‘yes’ to too many things.<br /> 
I perform at my best if I’m working sensible hours, and I’ve been able to get to the gym and grab a coffee before I start work - and the more I let that slip, the less effective I am day-to-day. The challenge here is how I stick to the things I know I need to do that help me be at my best. I can do better!</p>

<h2 id="️-the-priority-battle">⚔️ The priority battle</h2>
<p>I think I’ve came to the conclusion that prioritising well is always going to be a battle. I’ll lose sometimes and make the wrong calls, but as long as I’m sticking to a process that I know works, and I’m building in the time I need personally to be at my best, then I can hit a good rhythm. Staying true to my current priorities means that I’ll have more time in the future - I’ve just got to execute against them.</p>

<p><br /> Give me a shout if you’d like to talk about any of this or anything resonates with you - I’m on a constant journey of learning 👨‍🏫</p>

<center>All images in this post are from https://undraw.co/</center>]]></content><author><name>Luke Briscoe</name></author><summary type="html"><![CDATA[I’m finally writing again! I was surprised to see my last post was back in June last year, and after two weeks off from work, I feel like I’ve got the headspace to write again. Prioritisation has been heavy on my mind over the last ~3-4 months as the scope of my role has changed, so this feels like a decent topic to get stuck into.]]></summary></entry><entry><title type="html">⚽️ Gareth Southgate: Engineering Manager</title><link href="http://localhost:4000/gareth-southgate-eng-mgr/" rel="alternate" type="text/html" title="⚽️ Gareth Southgate: Engineering Manager" /><published>2021-06-22T06:00:00+00:00</published><updated>2021-06-22T06:00:00+00:00</updated><id>http://localhost:4000/gareth-southgate-eng-mgr</id><content type="html" xml:base="http://localhost:4000/gareth-southgate-eng-mgr/"><![CDATA[<p>I love football. I watch it all the time, I used to play, and I’m fascinated by what goes on behind the scenes at professional football clubs. The dynamics that exist, what players are really like, how they organise themselves and train ahead of a game - everything. So in the build up to Euro 202<del>0</del>1, I’ve loved hearing more from Gareth Southgate, manager of the England men’s football team 🏴󠁧󠁢󠁥󠁮󠁧󠁿⚽️</p>

<p>It’s been great hearing about how he’s picked his squad, how they’ve prepped heading into a big tournament, and in particular how he creates an environment that means his team can perform at their very best. As I was listening, I’ve found there are loads of comparisons we can draw to managing high performing software engineering teams.</p>

<p>So what can software engineering leaders learn from Gareth Southgate? And more widely - how different is managing a winning football team from managing a high performing engineering organisation?</p>

<p>Even if football isn’t your thing, hopefully some of these insights are useful 💡</p>

<p>ℹ️ My inspiration for this post mainly came from <a href="https://www.thehighperformancepodcast.com/episodes/gareth-southgate">Southgate’s interview on the High Performance Podcast.</a> It’s definitely worth a watch/listen even if you’re not a football fan!</p>

<p align="center"> 
  <img width="400" height="300" src="https://github.com/lukebriscoe/lukebriscoe.github.io/blob/main/assets/img/undraw_game_day_ucx9%20(1).png?raw=true" />
</p>

<h2 id="--there-are-lots-of-similarities"><br /> 👯 There are lots of similarities</h2>

<p>There’s lots we can learn from Southgate and the England team setup. I don’t know why I was so surprised (maybe it’s because you never really hear about what happens behind the scenes in elite football teams), but almost everything he was talking about on the podcast resonated with me and the teams I work with every day.</p>

<p>I thought about going down the path of describing how:</p>

<p>🏢  St.George’s Park (the England team’s footballing centre) is like our company office/company culture <br />
🏋️  The gym and training pitches are like our staging/pre-production environments <br />
🏟  Their matchday is like our production environment <br /></p>

<p>Everthing the team is doing is leading up to making sure their plan is executed perfectly on matchday – similar to how we work together to write, test and ship high-quality, impactful code everyday.</p>

<p>But - I actually found the more interesting and relevant lessons and similarities to be around the environment that Southgate and his staff create to get the best out of their team and the individuals on it. Let’s dig into a couple of those…</p>

<h2 id="-make-the-players-want-to-come-back"><br />🏟 Make the players want to come back</h2>

<p>One of the first things Gareth points to is how he tries to create an environment that the players always want to come back to. It’s got to be fun, safe, comfortable - and over time, familiar. The players have got to be able to build strong relationships and trust with each other, and the environment has to support maintaining those relationships. There are a lot of similarities here to how we make our engineering environments positive to work in - including making it safe to try new things out, and ok to make mistakes in the process.</p>

<p>He also mentions how the England players in teams of the past would play with fear; not wanting to be the scapegoat in a team that has dropped out of a major tournament early, or failed to even qualify. He reflected on his own experience of the criticism he received for missing <em>that</em> penalty at Euro 96, and how Beckham and Rooney took the blame following major tournament failure in more recent years.</p>

<p>There are some real similarities here to the environment we strive to create for our engineering teams; the focus should be on building a culture that allows everyone to do their best work, able to work without fear, and able to take calculated risks and not worry about punishment or blame.</p>

<h2 id="-bonding-and-building-team-spirit"><br />🤝 Bonding and building team spirit</h2>

<p>Lots of the media attention over the last few years with the England men’s team has been on the team spirit and togetherness that’s been built - and how that is starting to translate into success (reaching the semi-finals of the World Cup in 2018, for example). The players seem to enjoy being around each other – so how can we help our engineering teams feel the same way around each other and their leaders?</p>

<p>We encourage team socials and activities as a way of building relationships and trust, but in essence it doesn’t matter what our teams do together - there just has to be something that helps the bonding happen. Southgate talks about how a lot of that occurs with the England squad during mealtimes - they all sit and eat together regularly and take time to learn about each other’s lives inside and outside of football.</p>

<p>My favourite example was one that Damien Hughes from the podcast gave about a time he was working with a team in Argentina. Their coaches were horrified to find that their players were all sitting together one evening watching Love Island on TV in their hotel - but his point was it really doesn’t matter what they’re doing together - the important thing is that they’re <em>together</em>.</p>

<h2 id="-technical-ability-isnt-everything"><br />🧑‍💻 Technical ability isn’t everything</h2>

<p>This is the one that really made me sit up and listen. Southgate is pretty open that football players get into the squad based on their footballing ability and potential - but it’s their behaviour and attitude in combination with their talent helps keep them there.</p>

<p>In engineering we talk about the importance of technical impact and behaviours a lot - both of these contribute to high performance. It’s why most progression frameworks will reference both soft and hard skills - maybe it’s an obvious example to strike, but it’s one that I’d not given much thought to before with football. Technical ability is only one of many factors in high performance, apparently regardless of industry.<br /></p>

<p align="center"> 
  <img width="400" height="300" src="https://github.com/lukebriscoe/lukebriscoe.github.io/blob/main/assets/img/undraw_goal_0v5v%20(1).png?raw=true" />
</p>

<h2 id="-learning-from-failure">🧑‍🏫 Learning from failure</h2>

<p>Ah, my favourite subject. Southgate talks about the importance he places on his players and on himself to learn from their failures. The team runs retrospectives after each match, much like we do after incidents or at the end of a project, and deep-dive into the details and understand areas that the team can improve in future.</p>

<p>He mentions how you have to go through difficult periods to learn and grow - sometimes you’ve got to experience failure such as losing a big game to be able to come out of it feeling like a better person and player. I think there are lots of similarities we can strike in engineering here - particularly around incidents.</p>

<h2 id="leadership-from-within"><br />🎖Leadership from within</h2>

<p>Southgate’s comment about his exemplary captain and vice-captain in Harry Kane and Jordan Henderson resonated so strongly with me - those are his key senior players who he expects to set a high bar in the way that they deliver, and how they behave. There are a lot of comparisons I think we can make here to how important it is that senior engineers play leadership roles in high-performing engineering teams.</p>

<p>He talks about the varied role his coaching/management team also need to play in success. As well as coaching the players to improve, they’ve also got to help nurture leaders from within and help their current on-the-field leaders understand their role in the success of the team. He also mentions how important it is to create opportunities for players to develop as leaders, and build their experience over time – who’s on that journey vs. who’s there now? What highs or lows have they dealt with, and what else can they learn?</p>

<p>This feels strikingly similar to how we create progression opportunities for our engineers and managers to progress, and how important it is to build a strong partnership between managers and senior engineers as a joint leadership group.<br /></p>

<h2 id="-always-remember-why-were-here"><br />🔬 Always remember why we’re here</h2>

<p>Mercedes apparently has an F1 car in the middle of their office as a constant reminder of what they do everyday. St.George’s Park has been designed in a way that football and winning with the national team is front and centre of everything. How different is this from the way that we typically set up engineering organisations for success?</p>

<p>Similarly, we put our customers at the heart of everything we do. We serve up reminders for our teams in the form of mission, purpose and values of why we’re here and what we’re working towards. We release small regular changes that deliver value to customers incrementally, set customer-focused objectives, and create offices and workspaces that are centred around the customers we serve every day.</p>

<p>Maybe being the England football manager isn’t so different to what engineering leaders do everyday?</p>

<h2 id="-in-summary"><br />🏆 In summary</h2>

<p>As I’ve been writing this I’m drawing the conclusion that it’s probably all common sense; of course you build football teams in this way if you want them to be the best. At the end of the day, a team is a team and the physical and psychological factors that impact humans remain the same, regardless of your profession.</p>

<p>It’s certainly not what I was expecting to hear from Gareth Southgate though - maybe the stereotype the media projects about footballers in general meant that I didn’t think any of this stuff really happened - that it was just tactics, selection and then all down to the raw talent and technical ability of the players when it comes to matchday.</p>

<p>I certainly feel inspired by what Southgate spoke about and I’ve found it equally inspiring to draw similarities to how he’s brought some of these basic leadership principles to life in a professional international football team.</p>

<p>I love his never ending quest for perfection - do the basics brilliantly, dive in to the details that help you win from there, and do it all consistently.</p>

<p>A team is a team - regardless of the people in it. Once Gareth is done leading England to success (🤞) who knows what’s next…? 🏆⚽️🏴󠁧󠁢󠁥󠁮󠁧󠁿</p>

<p align="center"> 
  <img width="300" height="300" src="https://github.com/lukebriscoe/lukebriscoe.github.io/blob/main/assets/img/undraw_fans_gr54%20(1).png?raw=true" />
</p>
<center>All images in this post are from https://undraw.co/</center>]]></content><author><name>Luke Briscoe</name></author><summary type="html"><![CDATA[I love football. I watch it all the time, I used to play, and I’m fascinated by what goes on behind the scenes at professional football clubs. The dynamics that exist, what players are really like, how they organise themselves and train ahead of a game - everything. So in the build up to Euro 20201, I’ve loved hearing more from Gareth Southgate, manager of the England men’s football team 🏴󠁧󠁢󠁥󠁮󠁧󠁿⚽️]]></summary></entry><entry><title type="html">🔋 The Trust Battery</title><link href="http://localhost:4000/trust-battery/" rel="alternate" type="text/html" title="🔋 The Trust Battery" /><published>2021-02-19T19:00:00+00:00</published><updated>2021-02-19T19:00:00+00:00</updated><id>http://localhost:4000/trust-battery</id><content type="html" xml:base="http://localhost:4000/trust-battery/"><![CDATA[<p>I came across the ‘trust battery’ metaphor recently when reading <a href="https://basecamp.com/books/calm">‘It Doesn’t Have To Be Crazy At Work’</a> by Basecamp co-founders Jason Fried and David Heinemeier Hansson. The metaphor was apparently coined by Tobi Lütke, founder and CEO at Shopify. While I don’t agree with everything I’ve seen Tobi speak about in the past, I do really like this as a concept. As it’s been on my mind a bit recently, I thought I’d put a quick post together about it.</p>

<h2 id="-the-trust-battery">🔋 The trust battery</h2>

<p>The basic idea is that your trust battery is pre-charged at 50% when you’re first hired or start working with someone for the first time. Every interaction you have with your colleagues from that point on then either charges, discharges, or maintains the battery - and as a result, affects how much you enjoy working with them and trust them to do a good job.</p>

<p>The things that influence your trust battery charge vary wildly - whether the other person has done what they said they’ll do, how well you get on with that person, whether your opinions of that person are biased by others you have a high-trust relationship with, and lots more.</p>

<h2 id="-what-does-that-mean">🤔 What does that mean?</h2>

<p>Low charged trust batteries usually mean everything is more difficult - decisions can take longer to make, it takes longer to get things done, and performance in general drops. Low trust leads to poorer quality work, fatigue, and in some cases, conflict. In contrast, trust batteries that are well charged usually help teams and individuals deliver higher quality work more quickly and more collaboratively. Performance improves, people are generally happier and they’re left feeling more energised when working with others who have a mutually well charged trust battery.</p>

<h2 id="-changes-during-the-pandemic">🌀 Changes during the pandemic</h2>

<p>Sticking with the battery metaphor - if you charge your phone battery little and often, it’s going to remain well charged. Leave it for a while, and it starts to drain. Eventually, it completely runs out. Our trust batteries are exactly the same.</p>

<p>I think the pandemic has changed the way that many of us keep our trust batteries healthily charged with others. Those walks away from the office to grab a coffee with a colleague, small talk waiting for a meeting room, or planning to have something to eat after work have either disappeared or been replaced by a poor imitation of what existed before.</p>

<p>I’m certainly missing the opportunity to have those small-but-regular interactions that go towards building and maintaining trust with my colleagues. I only came across the concept of the trust battery a couple of weeks ago, but just being aware of it has started to change some of my behaviours - and I feel much better for it.</p>

<h2 id="️-recharging-your-batteries">⚡️ Recharging your batteries</h2>

<p>I’ve reconnected with some people I’ve had high trust at work with in the past but maybe don’t get the opportunity to work or talk to as often anymore. The batteries are slowly being charged up again. It’s only taken a quick chat on Slack or a 10-15 minute virtual coffee, but it’s been great to reconnect and maintain those relationships we’ve built over time - knowing it’ll be important for us in the future when we work together again.</p>

<p>It’s also helped me look at the relationships I have with people that I work with regularly now and that I speak to every week - are our trust batteries as highly charged as we’d like them to be? What are we missing that could help charge them up or maintain them? Do we know and trust each other as much as we think we do? How can we work together to improve or maintain things?</p>

<p>Have a think about the people you work with - are your trust batteries depleted? What can you do in the next few weeks to charge them up?</p>

<p>Hopefully the trust battery metaphor will help you as much as it has helped me 🔋🤞</p>]]></content><author><name>Luke Briscoe</name></author><summary type="html"><![CDATA[I came across the ‘trust battery’ metaphor recently when reading ‘It Doesn’t Have To Be Crazy At Work’ by Basecamp co-founders Jason Fried and David Heinemeier Hansson. The metaphor was apparently coined by Tobi Lütke, founder and CEO at Shopify. While I don’t agree with everything I’ve seen Tobi speak about in the past, I do really like this as a concept. As it’s been on my mind a bit recently, I thought I’d put a quick post together about it.]]></summary></entry><entry><title type="html">😔 Managing through redundancies</title><link href="http://localhost:4000/redundancy/" rel="alternate" type="text/html" title="😔 Managing through redundancies" /><published>2020-07-06T21:30:00+00:00</published><updated>2020-07-06T21:30:00+00:00</updated><id>http://localhost:4000/redundancy</id><content type="html" xml:base="http://localhost:4000/redundancy/"><![CDATA[<p>Redundancies.</p>

<p>Anxiety-causing, uncertainty-creating, fear-inducing times.</p>

<p>Redundancies pose so much more of a threat than to just your job; they affect your family, your home, your lifestyle, your health. Almost everything gets called into question.</p>

<p>With the effects of COVID-19 now really starting to be felt by businesses, redundancies are unfortunately becoming a reality for a huge number of people. Only last week <a href="https://www.bbc.co.uk/news/business-53247787">an additional 12,000 jobs were confirmed to be at risk across UK firms</a>, and they’re just the ones hitting the headlines.</p>

<p>I’m involved in a redundancy process right now, and have gone through this a couple of times in the past from both sides; leading the process, and being put at-risk. It’s at times of uncertainty like this that we look to our leaders for guidance and support more than ever. Redundancies (or the threat of being made redundant) trigger a range of emotions for everyone, and that’s ok. They’re difficult situations to handle. I’ve seen everything spanning anger, frustration and denial; and seen people assume each of the <a href="https://www.forbes.com/sites/remyblumenfeld/2018/12/07/how-to-transform-your-relationships-by-getting-creative/">dreaded drama triangle roles</a> of victims, persecutors and rescuers (thanks to my manager for recently for coaching me on these roles and what they mean 🙌).</p>

<p>They’re pressing times, and they call for strong leadership.</p>

<h2 id="-supporting-those-at-risk-of-redundancy">😔 Supporting those at-risk of redundancy</h2>

<p>Your colleagues who have been put at risk of redundancy need your support, whether they’re people you manage or your peers. Particularly for the people you manage, they need to know you’re there for them, and they need to know <em>how</em> you’ll support them. Here are a few pointers on how you might support people affected in your teams.</p>

<h3 id="-familiarise-yourself-with-the-process">❓ Familiarise yourself with the process</h3>

<p>You or those you manage might have never been through a process like this before, so it’s likely there will be a lot of questions. Take some time to familiarise yourself with the redundancy process; the timelines, the key milestones, the consultation sessions you might need to attend. Reach out to your People/HR rep too so they can help answer any questions that you’re not sure about. Nobody is expecting you to be a redundancy expert, but as a leader you should at least be able to direct people to find the answers they need.</p>

<h3 id="-encourage-people-to-be-clear-with-you-about-what-they-need">🔮 Encourage people to be clear with you about what they need</h3>

<p>Some people want to be left alone. Others want a constant channel into you to chat regularly. Find out what people need, what they are most worried about, and do what you can to support them. I usually want to be left to process things myself initially before talking about it with someone; in that case, I don’t want to be asked every day if I’m ok, how I’m feeling etc etc. Get that clarity upfront from the people you’re leading, and let them know you’re there for them.</p>

<h3 id="️-treat-people-as-individuals">🙋‍♀️ Treat people as individuals</h3>

<p>This might sound simple, but once you’ve found out what people need from you, tailor your approach to them. Everyone will react differently and their emotions might change over time as the process plays out – personal circumstances might change, they might need time off to look for new jobs and interview, or they might lean in to their work even more as a coping mechanism. Treat everyone as an individual and spend the time with them that they need.</p>

<h3 id="️-share-how-youre-feeling">🧟‍♀️ Share how you’re feeling</h3>

<p>Sometimes it’s easy to look at your manager or a senior leader and think they’re fine, or they’re not really affected by what’s going on. Remind people that you’re human too, and share how you’re feeling. Be vulnerable, but be considerate of how your thoughts will impact those around you, particularly if you’re speaking from a position of leadership.</p>

<p>I’ve seen a senior leader a long time ago (who wasn’t at risk of redundancy) try to lighten the mood by talking about how they’d just spent a fortune on something extravagant in front of a group of people who were worried about whether they’ll have a job next month or not. Don’t be that person.</p>

<h3 id="-reassure-where-you-can">👏 Reassure where you can</h3>

<p>This is a tricky one. During a fair process you can’t offer any guarantees to anyone at risk of redundancy, but you can reassure them if they’re having doubts about their ability. Being put at risk of redundancy raises a lot of questions. You question your performance, your core skills, yourself as a person. Am I not good enough? Do people not like me? Have I been found out as an impostor? As someone’s manager you could maybe point to some recent positive feedback someone in this position has received, or something they’ve worked on recently that has had a good impact. Don’t give false hope, but do share feedback and let them how they’re performing as you usually would as their manager.</p>

<p>Make sure that you’re not speculating on the process with anyone though, and remember to lean on your People/HR rep if you need support about the boundaries you need to respect here. If your company has an Employee Assistance Plan too, signpost people towards this as they can be a great source of support during these uncertain times.</p>

<h2 id="-supporting-your-teams-who-arent-at-risk">😕 Supporting your teams who aren’t at-risk</h2>

<p>Redundancies have just been announced, and you’ve found out you’re not in one of the roles identified as at-risk. Phew! Business as usual then 🤔</p>

<p>It’s clearly not quite that simple. Even though some people might not be at risk of losing their jobs, it’s likely that their friends, colleagues and peers who they respect and love working with could be at risk.</p>

<p>It’d be easy to overlook those who are staying as ‘they’re ok’, but remember that these groups are critical to the future success of your teams and the company. They need to be heard, supported and given time to process the news too, so make sure you invest time with them. Be clear on what they need and how you can support them through the process, just like you would with somebody at-risk.</p>

<h2 id="-re-prioritise-your-time">🕰 Re-prioritise your time</h2>

<p>Announcing redundancies comes at a cost. Companies have to accept a productivity hit when going through this process and factor that into the total cost of making the decision. You need to accept that your job is likely to be different throughout the process too, and it’ll depend on your own situation (particularly if you’re placed at-risk <em>and</em> expected to lead others through it).</p>

<p>To adapt and do your new job properly, you need to reprioritise. I’ve done this recently by identifying the things I will be spending time on, and then sharing those loudly by posting in my team and leadership Slack channels. Make sure your teams and your peers know that your job will be different for a while, and that you might be less present in certain meetings or team ceremonies. Invite your manager to review your priorities with you if you’re not sure. Build more free time into your calendar too; I’ve done this recently by removing myself from some non-critical meetings and shortening others.</p>

<h2 id="️-take-care-of-yourself">🧘‍♂️ Take care of yourself</h2>

<p>Remember to take care of yourself during this process. You won’t be much use to those who need you if you’re stressed, tired and drained when they reach out. There’s understandably a lot of emotion involved in these situations, and you need to be careful not to shoulder too much of everybody else’s thoughts and feelings. I’ve fallen into the situation recently where I’ve felt like I’m carrying the concerns of dozens of people around with me, and it can become all-consuming. Make time to do the things you enjoy; and try out a couple of different techniques for lightening the emotional burden you might have found yourself carrying (meditating, exercising etc).</p>

<p>The redundancy process can feel like it’s lasting forever. If your company is making 20 or more redundancies in the UK, it’s going to last for <em>at least</em> 30 days, so be prepared. That’s a long time for everyone involved, so taking care of yourself whether you’re directly involved in the process or not is crucial to getting through it intact.</p>

<p>It’s also important to recognise that you’re already in an uncertain, uncomfortable situation with COVID-19, and redundancies are only going to compound that. We’re not doing all of the things we were able to do four months ago like regularly seeing family, friends, and colleagues, and we’re not able to do some of the things we enjoy.</p>

<p>Now more than ever you need to look after yourself 🤗 🧘‍♂️</p>]]></content><author><name>Luke Briscoe</name></author><summary type="html"><![CDATA[Redundancies.]]></summary></entry></feed>